{"remainingRequest":"C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\src\\components\\Map.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\src\\components\\Map.vue","mtime":1655374212502},{"path":"C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\babel.config.js","mtime":1655294861032},{"path":"C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655294838047},{"path":"C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\node_modules\\babel-loader\\lib\\index.js","mtime":1655294844734},{"path":"C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655294838047},{"path":"C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1655294839443}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["ref","onMounted","watch","Map","View","XYZ","Overlay","TileLayer","TileWMS","VectorLayer","VectorSource","GeoJSON","Icon","Fill","Stroke","Style","OSM","questionIcon","mapCom","popupCom","popupCom2","map","overlay","overlay2","currentCoordinate","content","keys_list","layers","viewResolution","local_host","window","location","protocol","host","selected","selectStyle","fill","color","stroke","width","legend_items","id","name","img","visible","Dark_baselayer","value","source","url","view","projection","center","zoom","OSM_baselayer","Pibor_partners","format","style","image","src","GRID3","className","params","serverType","transition","initMap","element","autoPan","autoPanAnimation","duration","position","target","overlays","mapClick","closePopup","setPosition","undefined","on","startTime","performance","now","coordinate","event","getView","getResolution","getLayers","getArray","console","log","setStyle","forEachFeatureAtPixel","pixel","feature","values_","getFill","setColor","get","keys","getKeys","n","key","push","list_of_remove_keys","keys_list2","remove_key","k3","indexOf","splice","k1","k2","endTime"],"sourceRoot":"","sources":["C:\\Users\\Laptop\\Documents\\Jobb\\Geo start-up\\Projects\\PMM\\PMM_web_map\\src\\components\\Map.vue"],"sourcesContent":["<template>\n<img src=\"https://github.com/Syverpet/prototyping_data_april_2022/blob/main/logo2.png?raw=true\" class='header'>\n  \n\n  <div class=\"grid-container\">\n        \n        <div class=\"left\">\n            <div class=\"toc\">\n\n                <h3>Layers</h3>\n                <ul v-for=\"item in legend_items\" :key=\"item\" class=\"text-bold-black\">\n\n                  <input type=\"checkbox\" :id=\"item.visible\" :value=\"item.visible\" v-model=\"item.visible\">\n                  <label :for=\"item.visible\">{{item.visible}}</label>\n                \n                </ul>\n\n\n                <h3 style=\"margin-bottom: 0px; padding-bottom: 0px;\">Legend</h3>\n                <div v-for=\"item in legend_items\" :key=\"item\" class=\"legend-list\">\n\n                  <div v-if=\"item.visible\" class=\"text-bold-black\">\n                    <img :src=\"item.img\" class=\"legend-img\"> {{item.name.replace(\"_\", \" \")}} \n                  </div>\n\n                </div>\n\n              <div id=\"CF\" ref=\"yourDiv\"></div>\n                \n            </div>\n\n        </div>\n\n      <div class=\"right\">\n\n        <div id=\"map\" class=\"map__x\" ref=\"mapCom\"></div>\n\n        <div ref=\"popupCom2\" class=\"popup2\">Symbology based on UN OCHA resource sharing standard \n\n          <span class=\"icon-close\" @click=\"closePopup\">X</span>\n        </div>\n\n\n        <div ref=\"popupCom\" class=\"popup\">\n\n            <span class=\"icon-close\" @click=\"closePopup\">X</span>\n            \n            <div class=\"text-bold-white\"> Attributes</div>\n            <div class=\"overlay-text\" v-for=\"item in content\" :key=\"item\"> {{item}} </div>\n\n        </div>\n        </div>\n\n\n    </div>\n\n</template>\n\n\n<script> \n\nimport { ref, onMounted, watch } from 'vue'\nimport { Map, View } from 'ol' // Introduce container binding module and view module  \nimport XYZ from 'ol/source/XYZ' // introduce XYZ Map format  \nimport Overlay from 'ol/Overlay'// Introduce the cover module  \nimport 'ol/ol.css' // ol Provided css style （ Must introduce ）\n\nimport TileLayer from 'ol/layer/Tile'\nimport TileWMS from 'ol/source/TileWMS';\nimport VectorLayer from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport GeoJSON from 'ol/format/GeoJSON'\nimport {Icon, Fill, Stroke, Style} from 'ol/style';\nimport OSM from 'ol/source/OSM'\n//import Select from 'ol/interaction/Select';\n//import {click} from 'ol/events/condition';\n\n\nimport questionIcon from \"@/assets/questionIcon.png\";\n\n\n\n//const icons_link = ref('https://github.com/Syverpet/prototyping_data_april_2022/tree/main/icons/') // Github link to icons folder\nconst mapCom = ref(null) // Map container  \nconst popupCom = ref(null) // Pop up container\nconst popupCom2 = ref(null) // Pop up container  \nconst map = ref(null) // Examples of maps  \nconst overlay = ref(null) // Cover example \nconst overlay2 = ref(null) // Cover example  \nconst currentCoordinate = ref('') // Pop up information\n\nconst content = ref('')\nconst keys_list = ref([])\n\n//const checkedLayers = ref(['Dark_baselayer', 'OSM_baselayer', 'Pibor_partners', 'GRID3'])  // WHENADDLAYERS\n\nconst layers = ref(null)\n\nconst viewResolution = ref(null)\n\nconst local_host = ref(window.location.protocol + \"//\" + window.location.host + \"/\") // local host variable.\n\nconst selected = ref(null)\n\nconst selectStyle = new Style({\n  fill: new Fill({\n    color: '#eeeeee',\n  }),\n  stroke: new Stroke({\n    color: 'rgba(255, 255, 255, 0.7)',\n    width: 2,\n  }),\n});\n\n\n// Legend list items // WHENADDLAYERS\nconst legend_items = ref([\n  {\n    id: 0,\n    name: 'Dark_baselayer',\n    img: 'https://github.com//Syverpet/prototyping_data_april_2022/blob/main/icons/Medical Facilities.png?raw=true',\n    visible: true\n  },\n  { \n    id: 1,\n    name: 'OSM_baselayer',\n    img: 'https://github.com//Syverpet/prototyping_data_april_2022/blob/main/icons/Medical_Equipment_and_Supplies.png?raw=true',\n    visible: true\n  },\n  {\n    id: 2,\n    name: 'Pibor_partners',\n    img: 'https://github.com//Syverpet/prototyping_data_april_2022/blob/main/icons/Ambulatory_support.png?raw=true',\n    visible: true\n  },\n  {\n    id: 3,\n    name: 'GRID3',\n    img: 'https://github.com//Syverpet/prototyping_data_april_2022/blob/main/icons/Offices_and_Partners.png?raw=true',\n    visible: true\n  }\n])\n\n\n\n \n\n\n//BASE LAYERS // WHENADDLAYERS\n\nconst Dark_baselayer = ref(new TileLayer({\n  visible: legend_items.value[0].visible,\n  source: new XYZ({\n    url: \"https://c.tile.jawg.io/jawg-dark/{z}/{x}/{y}.png?access-token=87PWIbRaZAGNmYDjlYsLkeTVJpQeCfl2Y61mcHopxXqSdxXExoTLEv7dwqBwSWuJ\",\n    view: new View({ projection: 'EPSG:4326', // Projection coordinate system  \n    center: [113.1206, 23.034996], // The center of the map  \n    zoom: 1, // Map zoom level （ The default level when opening a page,\n    }),\n  })\n}))\n\nconst OSM_baselayer = ref(new TileLayer({\n  visible: legend_items.value[1].visible,\n  source: new OSM(), // tiles are served by OpenStreetMap\n  view: new View({ \n    projection: 'EPSG:4326', // Projection coordinate system  \n    center: [113.1206, 23.034996], // The center of the map  \n    zoom: 1\n  })\n}))\n\nconst Pibor_partners = ref(new VectorLayer({\n      visible: legend_items.value[2].visible,\n      source: new VectorSource({\n        format: new GeoJSON(),\n        url: 'https://raw.githubusercontent.com/Syverpet/prototyping_data_april_2022/main/Pibor_partners.json.geojson'\n      }),\n      style: new Style({\n        image: new Icon({\n          src: questionIcon,\n        }),\n      })\n  }))\n\n  const GRID3 = ref(new TileLayer({\n      visible: legend_items.value[3].visible,\n      className: 'SS_States_Activities',\n      source: new TileWMS({\n        url: local_host.value + '/geoserver/frank_test/wms',\n        params: {'LAYERS': 'frank_test:SEN_population_v1_0_gridded', 'TILED': true},\n        serverType: 'geoserver',\n       \n        transition: 0,\n      }),\n    }))\n\n\n\n// Initialize map  \nfunction initMap() {  \n  //OVERLAY \n  overlay.value = new Overlay({ element: popupCom.value, \n  autoPan: true, \n  autoPanAnimation: { \n  duration: 250 } })\n\n  overlay2.value = new Overlay({ element: popupCom2.value, \n  autoPan: true,\n  position: [2315315.442215883, 2204799.1294523671],\n  autoPanAnimation: { \n  duration: 250 } })\n  \n  \n  \n  //MAP\n  map.value = new Map({ \n    \n    target: mapCom.value,\n    layers: [ // WHENADDLAYERS\n      Dark_baselayer.value,\n      OSM_baselayer.value,\n      Pibor_partners.value,\n      GRID3.value,\n     ], \n      view: new View({ projection: 'EPSG:3857', // Projection coordinate system  \n      center: [3315315.442215883, 734799.1294523671], // The center of the map  \n      zoom: 5 // Map zoom level （ The default level when opening a page ） \n      }),\n      overlays: [overlay.value, overlay2.value]\n       // Bind a cover\n      }) \n\n  mapClick() // Bind the click event after map initialization  \n  \n  \n  \n} // Click map event  \n\nfunction closePopup() { \n    overlay.value.setPosition(undefined)\n    overlay2.value.setPosition(undefined) // setPosition Pass in undefined Will hide pop-up elements  \n    currentCoordinate.value = '' // Empty the pop-up window  \n}\n\n\n\n\n\n\nfunction mapClick() { \n\n\n    map.value.on('singleclick', event => { // Bind a click event'\n\n   \n    \n    //console.log('target', map.value)\n\n    var startTime = performance.now()                                            // TIMETIMETIMETIME START\n\n      const coordinate = event.coordinate // Get coordinates  \n      currentCoordinate.value = coordinate // Save coordinate points  \n       // Set where the cover appears\n\n      \n\n\n      viewResolution.value = map.value.getView().getResolution()\n\n      layers.value = map.value.getLayers().getArray();\n\n      console.log(coordinate)\n      \n\n\n\n\n\n      //for(var i in layers.value){\n\n          //console.log('i', i)\n\n          //console.log('Properties', this.layers[i].getProperties())\n          //console.log('Source', this.layers[i].getSource().serverType_)\n\n          //if (layers.value[i].getSource().serverType_ == \"geoserver\") {\n\n            //console.log('TILE layer filtered:', layers.value[i])\n\n           \n\n          \n          if (selected.value !== null) { \n                    selected.value.setStyle(undefined);\n                    selected.value = null;\n          }\n              \n\n              map.value.forEachFeatureAtPixel(event.pixel, function (feature) { // can add layer as argument **\n \n                  console.log('FEATURE', feature.values_)\n\n                  selected.value = feature;\n                  selectStyle.getFill().setColor(feature.get('COLOR') || '#eeeeee');\n                  feature.setStyle(selectStyle);\n                  return true;\n              });\n\n          if (selected.value) { \n\n            keys_list.value = [] // reset list\n\n            console.log(keys_list)\n\n                var keys = selected.value.getKeys() // keys\n\n                for (var n in keys) {\n\n                    var key = keys[n]\n                    \n                    keys_list.value.push(key)\n                }\n\n               var list_of_remove_keys = ['geometry', 'Shape_Leng', 'Shape_Area', 'Area_Km', 'Lat', 'Long'] //   REMOVE KEYS HERE! \n\n               var keys_list2 = keys_list\n\n               \n                  \n                for (var remove_key in list_of_remove_keys) { // loop for remove keys\n\n                  var k3 = list_of_remove_keys[remove_key]\n\n                  var position = keys_list2.value.indexOf(k3) // get index of remove key\n\n                  //console.log('removeKey', k3)\n\n                  //console.log('keylist_length', keys_list2.value.length)\n\n                  //console.log('position', position)\n\n                  //console.log('splice', keys_list.value.splice(position, 1))\n\n                  if (position != -1) {keys_list2.value.splice(position, 1) \n \n                  }\n                }\n                \n\n                \n\n                content.value = []\n\n                for (var k1 in keys_list2.value) { // keys list filter keys and push to popup content\n\n                    \n\n                    var k2 = keys_list2.value[k1]\n\n                    //console.log('key', k2)\n\n                    content.value.push(k2 + ' : ' + selected.value.get(k2))  // push both key and value to final content list \n                }\n\n                  overlay.value.setPosition(event.coordinate) // set coordinate of overlay for activation of popup\n\n          }\n\n                \n          else {   // If there is no feature in pixel\n            content.value = null;\n            overlay.value.setPosition(null)\n          }\n\n          var endTime = performance.now()                                              // TIMETIMETIMETIME END\n          console.log(`Map click took ${endTime - startTime} milliseconds`)\n      \n    })\n  } // Close the pop-up window  \n\n//watch( \n\n//zoomChanged(currentZoom) {\n//      this.currentZoom = currentZoom;\n//    },\n//)\n\n\n\n\nonMounted(() => {\n     // Perform map initialization after the element is loaded  \n  initMap()\n  \n  }) \n\n  </script>\n\n\n<style > \n\n.map__x { \n  width: 100vw; \n  height: 100vh; \n  border: 1px solid #eee; \n  } \n\n.popup { \n  background: rgba(0,110,172,1) !important;\n  width: 150px;\n  height: 150px;\n  color: white;\n  box-shadow: 0 5px 10px rgb(2 2 2 / 40%);\n  padding: 8px 15px;\n  font-size: 13px;\n  overflow:auto; \n  }\n\n.popup2 {\n  margin: 70px auto;\n  padding: 20px;\n  \n  background: #fff;\n  border-radius: 5px;\n  box-shadow: 0 5px 10px rgb(2 2 2 / 40%);\n  width: 30%;\n  position: relative;\n  transition: all 5s ease-in-out;\n  color: #333;\n  font-family: Tahoma, Arial, sans-serif;\n}\n\n.icon-close { \n  position: absolute; \n  top: 0px; \n  right: 8px; \n  cursor: pointer; \n  } \n\n  .overlay-text {\ncolor: white;\nfont-size: 13px;\nfont-family: Roboto, Arial, sans-serif;\n}\n\n.header {\n    grid-area: header;\n    font-size: 25px;\n    height: 50px;\n    font-family: 'Gill Sans','Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.grid-container {\n    display: grid;\n    grid-template-areas: \n    'header header'\n    'left right';\n}\n\n.left {\n    grid-area: left;\n    width: 20vw;\n    height: 100vh;\n    border: 5px solid grey;\n}\n\n.toc {\n    margin-left: 10px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.right {\n    grid-area: right;\n    width: 80vw;\n    height: 100vh;\n    border: 5px solid grey;\n}\n\n.text-bold-black {\ncolor: rgb(0, 0, 0);\nfont-size: 13px;\nfont-family: Roboto, Arial, sans-serif;\nfont-weight: bold;\n}\n\n.legend-img {\n  position: relative;\n  top: 1.5em;\n  padding: 0px;\n  margin: 0px;\n  height: 40px;\n}\n\n.legend-list {\n  display: block;\n  list-style-type: disc;\n  margin-block-start: 0em;\n  margin-block-end: 0em;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n  padding-inline-start: 35px;\n}\n\n.legend-text {\n  padding: 0px;\n  margin: 0px;\n}\n\n.text-bold-white {\ncolor: rgb(255, 255, 255);\nfont-size: 13px;\nfont-family: Roboto, Arial, sans-serif;\nfont-weight: bold;\n}\n\n\n\n</style>"]}]}